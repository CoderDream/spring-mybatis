<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.olts.mapper.OltsCatagoryMapper">

	<!-- 写一个查询语句 ,mybatis有两种方式将查询结果映射为POJO(JavaBean)
		1. 自动映射，这种方式必须要表的列名和POJO的属性名一致。
		2. 通过<resultMap>元素进行映射（推荐用这种方式）
	-->

	<!-- 结果映射,所有的jdbcType指的都是java.sql.Types类中定义的常量 -->
	<resultMap id="baseOltsCatagoryResultMap" type="oltsCatagory">
		<id property="id" column="id" javaType="integer" jdbcType="INTEGER"/>
		<result property="courseName" column="course_name" jdbcType="VARCHAR"/>
	</resultMap>
	
	
	
	<select id="selectFindAll" resultMap="baseOltsCatagoryResultMap">
		select * from lqolts.courses 
	</select>
	
	<insert id="insertCatagory" parameterType="oltsCatagory">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
	    	select course_seq.nextval from dual
	  	</selectKey>
	  	insert into courses(ID,COURSE_NAME) values(#{id},#{courseName,jdbcType=VARCHAR})
	</insert>
	
	<delete id="removeCatagory" parameterType="Integer">
		delete courses where id=#{id}
	</delete>
	
	<update id="update" parameterType="oltsCatagory">
		update courses 
		<set>
			<if test="courseName != null">
				COURSE_NAME=#{courseName}
			</if>
		</set> 
		where id=#{id}
	</update>
	
	<select id="findCatagory" parameterType="Integer" resultMap="baseOltsCatagoryResultMap">
		select * from courses where id=#{id}
	</select>
	
	
	
</mapper>
